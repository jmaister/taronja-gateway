---
import Layout from '../../layouts/Layout.astro';

// Sample roster data
const players = [
	{
		name: "Jake Thunder",
		number: 19,
		position: "Center",
		age: 28,
		height: "6'2\"",
		weight: "200 lbs",
		hometown: "Toronto, ON",
		goals: 35,
		assists: 42,
		points: 77
	},
	{
		name: "Mike Storm",
		number: 8,
		position: "Left Wing",
		age: 25,
		height: "6'0\"",
		weight: "185 lbs",
		hometown: "Montreal, QC",
		goals: 28,
		assists: 31,
		points: 59
	},
	{
		name: "Alex Lightning",
		number: 27,
		position: "Right Wing",
		age: 24,
		height: "5'11\"",
		weight: "180 lbs",
		hometown: "Vancouver, BC",
		goals: 22,
		assists: 38,
		points: 60
	},
	{
		name: "Ryan Bolt",
		number: 4,
		position: "Defense",
		age: 29,
		height: "6'3\"",
		weight: "210 lbs",
		hometown: "Calgary, AB",
		goals: 8,
		assists: 25,
		points: 33
	},
	{
		name: "Sam Frost",
		number: 2,
		position: "Defense",
		age: 26,
		height: "6'1\"",
		weight: "195 lbs",
		hometown: "Ottawa, ON",
		goals: 5,
		assists: 22,
		points: 27
	},
	{
		name: "Tony Ice",
		number: 30,
		position: "Goalie",
		age: 27,
		height: "6'4\"",
		weight: "220 lbs",
		hometown: "Edmonton, AB",
		saves: 852,
		savePercent: "92.5%",
		gaa: "2.15"
	},
	{
		name: "Mark Blaze",
		number: 11,
		position: "Center",
		age: 23,
		height: "5'10\"",
		weight: "175 lbs",
		hometown: "Winnipeg, MB",
		goals: 18,
		assists: 24,
		points: 42
	},
	{
		name: "Chris Eagle",
		number: 15,
		position: "Left Wing",
		age: 30,
		height: "6'1\"",
		weight: "190 lbs",
		hometown: "Halifax, NS",
		goals: 21,
		assists: 19,
		points: 40
	}
];

const coaches = [
	{
		name: "Coach Rick Thunder",
		position: "Head Coach",
		experience: "15 years",
		achievements: "5x Championship Winner"
	},
	{
		name: "Assistant Coach Maria Storm",
		position: "Assistant Coach",
		experience: "8 years",
		achievements: "Former Olympic Player"
	},
	{
		name: "Coach Dave Lightning",
		position: "Goalie Coach",
		experience: "12 years",
		achievements: "Former NHL Goalie"
	}
];
---

<Layout title="Roster - Thunder Hawks Hockey Team">
	<!-- User Info Section -->
	<div id="user-info" class="mb-12 text-2xl text-white">
		<!-- User info will be loaded here via JavaScript -->
	</div>

	<h1 class="text-blue-900 mb-4 text-5xl text-center">Team Roster</h1>
	
	<div class="bg-white rounded-xl p-8 my-8 shadow-2xl">
		<h2 class="text-blue-900 mb-4 text-3xl border-b-4 border-yellow-400 pb-2">üë• Coaching Staff</h2>
		<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mt-4">
			{coaches.map((coach) => (
				<div class="flex gap-4 p-6 bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl border-l-4 border-yellow-400">
					<div class="flex-shrink-0">
						<div class="w-15 h-15 bg-blue-900 text-white rounded-full flex items-center justify-center font-bold text-xl">
							{coach.name.split(' ').map(n => n[0]).join('')}
						</div>
					</div>
					<div class="flex-1">
						<h3 class="text-blue-900 mb-4 text-xl">{coach.name}</h3>
						<p class="text-yellow-500 font-bold mb-1">{coach.position}</p>
						<p class="text-gray-600 text-sm mb-1">Experience: {coach.experience}</p>
						<p class="text-gray-600 text-sm">{coach.achievements}</p>
					</div>
				</div>
			))}
		</div>
	</div>

	<div class="bg-white rounded-xl p-8 my-8 shadow-2xl">
		<h2 class="text-blue-900 mb-4 text-3xl border-b-4 border-yellow-400 pb-2">üèí Player Roster</h2>
		<div class="flex gap-2 mb-8 flex-wrap justify-center">
			<button class="filter-btn px-4 py-2 border-2 border-blue-900 bg-blue-900 text-white rounded-full cursor-pointer font-semibold transition-all duration-300 hover:bg-blue-800 active" data-position="all">All Players</button>
			<button class="filter-btn px-4 py-2 border-2 border-blue-900 bg-white text-blue-900 rounded-full cursor-pointer font-semibold transition-all duration-300 hover:bg-blue-900 hover:text-white" data-position="Center">Centers</button>
			<button class="filter-btn px-4 py-2 border-2 border-blue-900 bg-white text-blue-900 rounded-full cursor-pointer font-semibold transition-all duration-300 hover:bg-blue-900 hover:text-white" data-position="Left Wing">Left Wings</button>
			<button class="filter-btn px-4 py-2 border-2 border-blue-900 bg-white text-blue-900 rounded-full cursor-pointer font-semibold transition-all duration-300 hover:bg-blue-900 hover:text-white" data-position="Right Wing">Right Wings</button>
			<button class="filter-btn px-4 py-2 border-2 border-blue-900 bg-white text-blue-900 rounded-full cursor-pointer font-semibold transition-all duration-300 hover:bg-blue-900 hover:text-white" data-position="Defense">Defense</button>
			<button class="filter-btn px-4 py-2 border-2 border-blue-900 bg-white text-blue-900 rounded-full cursor-pointer font-semibold transition-all duration-300 hover:bg-blue-900 hover:text-white" data-position="Goalie">Goalies</button>
		</div>
		
		<div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
			{players.map((player) => (
				<div class={`bg-white rounded-xl overflow-hidden shadow-lg transition-all duration-300 hover:transform hover:-translate-y-2 hover:shadow-xl border-t-4 ${
					player.position === 'Center' ? 'border-green-500' :
					player.position === 'Left Wing' || player.position === 'Right Wing' ? 'border-orange-500' :
					player.position === 'Defense' ? 'border-blue-500' :
					player.position === 'Goalie' ? 'border-purple-500' : 'border-blue-900'
				}`} data-position={player.position}>
					<div class="bg-gradient-to-br from-blue-900 to-blue-700 text-white p-4 flex justify-between items-center">
						<div class="text-3xl font-bold text-yellow-400">#{player.number}</div>
						<div class="bg-white/20 px-3 py-1 rounded-full text-sm font-semibold">{player.position}</div>
					</div>
					<div class="p-4">
						<h3 class="text-blue-900 mb-4 text-xl font-bold">{player.name}</h3>
						<div class="grid grid-cols-1 gap-2">
							<div class="flex justify-between text-sm">
								<span class="text-gray-600 font-semibold">Age:</span>
								<span class="text-gray-800">{player.age}</span>
							</div>
							<div class="flex justify-between text-sm">
								<span class="text-gray-600 font-semibold">Height:</span>
								<span class="text-gray-800">{player.height}</span>
							</div>
							<div class="flex justify-between text-sm">
								<span class="text-gray-600 font-semibold">Weight:</span>
								<span class="text-gray-800">{player.weight}</span>
							</div>
							<div class="flex justify-between text-sm">
								<span class="text-gray-600 font-semibold">Hometown:</span>
								<span class="text-gray-800">{player.hometown}</span>
							</div>
						</div>
					</div>
					<div class="bg-gray-50 p-4 flex justify-around">
						{player.position === 'Goalie' ? (
							<>
								<div class="text-center">
									<span class="block text-xl font-bold text-blue-900">{player.saves}</span>
									<span class="text-xs text-gray-600 uppercase tracking-wider">Saves</span>
								</div>
								<div class="text-center">
									<span class="block text-xl font-bold text-blue-900">{player.savePercent}</span>
									<span class="text-xs text-gray-600 uppercase tracking-wider">Save %</span>
								</div>
								<div class="text-center">
									<span class="block text-xl font-bold text-blue-900">{player.gaa}</span>
									<span class="text-xs text-gray-600 uppercase tracking-wider">GAA</span>
								</div>
							</>
						) : (
							<>
								<div class="text-center">
									<span class="block text-xl font-bold text-blue-900">{player.goals}</span>
									<span class="text-xs text-gray-600 uppercase tracking-wider">Goals</span>
								</div>
								<div class="text-center">
									<span class="block text-xl font-bold text-blue-900">{player.assists}</span>
									<span class="text-xs text-gray-600 uppercase tracking-wider">Assists</span>
								</div>
								<div class="text-center">
									<span class="block text-xl font-bold text-blue-900">{player.points}</span>
									<span class="text-xs text-gray-600 uppercase tracking-wider">Points</span>
								</div>
							</>
						)}
					</div>
				</div>
			))}
		</div>
	</div>

	<div class="bg-white rounded-xl p-8 my-8 shadow-2xl">
		<h2 class="text-blue-900 mb-4 text-3xl border-b-4 border-yellow-400 pb-2">üìà Team Statistics</h2>
		<div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-4">
			<div class="stat-category">
				<h3 class="text-blue-900 mb-4 text-xl border-b-2 border-yellow-400 pb-2">Offense</h3>
				<div class="flex flex-col gap-3">
					<div class="flex justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-900">
						<span>Goals Per Game:</span>
						<span class="font-bold text-blue-900">5.8</span>
					</div>
					<div class="flex justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-900">
						<span>Power Play %:</span>
						<span class="font-bold text-blue-900">24.5%</span>
					</div>
					<div class="flex justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-900">
						<span>Shots Per Game:</span>
						<span class="font-bold text-blue-900">32.4</span>
					</div>
				</div>
			</div>
			<div class="stat-category">
				<h3 class="text-blue-900 mb-4 text-xl border-b-2 border-yellow-400 pb-2">Defense</h3>
				<div class="flex flex-col gap-3">
					<div class="flex justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-900">
						<span>Goals Against Per Game:</span>
						<span class="font-bold text-blue-900">2.7</span>
					</div>
					<div class="flex justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-900">
						<span>Penalty Kill %:</span>
						<span class="font-bold text-blue-900">89.2%</span>
					</div>
					<div class="flex justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-900">
						<span>Blocked Shots:</span>
						<span class="font-bold text-blue-900">18.6</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</Layout>

<script>
	// Define types for user data
	interface UserData {
		username: string;
		picture?: string;
		[key: string]: any;
	}

	// Load user data from /_/me endpoint
	async function loadUserData(): Promise<void> {
		try {
			const response = await fetch('/_/me');
			if (!response.ok) {
				throw new Error(`HTTP error! status: ${response.status}`);
			}
			
			const userData: UserData = await response.json();
			displayUserInfo(userData);
		} catch (error) {
			console.error('Failed to load user data:', error);
			// Show error state or default user info
			displayUserInfo({ username: 'Guest' });
		}
	}

	// Display user info at the top of the page
	function displayUserInfo(userData: UserData): void {
		const userInfoContainer = document.getElementById('user-info');
		if (!userInfoContainer) return;

		userInfoContainer.innerHTML = `
			<div class="flex flex-col lg:flex-row items-center gap-8 bg-white p-10 rounded-2xl shadow-2xl border-l-8 border-yellow-400">
				<div class="flex-shrink-0">
					${userData.picture 
						? `<img src="${userData.picture}" alt="${userData.username}" class="w-30 h-30 rounded-full object-cover border-4 border-blue-900 shadow-lg" />` 
						: `<div class="w-30 h-30 bg-blue-900 text-white rounded-full flex items-center justify-center text-6xl font-bold border-4 border-yellow-400 uppercase">${userData.username.charAt(0).toUpperCase()}</div>`
					}
				</div>
				<div class="flex flex-col gap-2 text-center lg:text-left">
					<span class="text-gray-600 text-xl font-medium">Welcome back,</span>
					<span class="text-blue-900 text-3xl font-bold">${userData.username}</span>
				</div>
			</div>
		`;
	}

	// Add filtering functionality
	document.addEventListener('DOMContentLoaded', function() {
		// Load user data on page load
		loadUserData();

		const filterButtons = document.querySelectorAll('.filter-btn') as NodeListOf<HTMLElement>;
		const playerCards = document.querySelectorAll('[data-position]') as NodeListOf<HTMLElement>;
		
		filterButtons.forEach(button => {
			button.addEventListener('click', function(this: HTMLElement) {
				// Remove active class from all buttons
				filterButtons.forEach(btn => {
					btn.classList.remove('bg-blue-900', 'text-white');
					btn.classList.add('bg-white', 'text-blue-900');
				});
				// Add active class to clicked button
				this.classList.remove('bg-white', 'text-blue-900');
				this.classList.add('bg-blue-900', 'text-white');
				
				const selectedPosition = this.dataset.position;
				
				playerCards.forEach(card => {
					if (selectedPosition === 'all' || card.dataset.position === selectedPosition) {
						card.style.display = 'block';
					} else {
						card.style.display = 'none';
					}
				});
			});
		});
	});
</script>
